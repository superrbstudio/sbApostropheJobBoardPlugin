<?php

/**
 * PluginsbJobBoardJobTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginsbJobBoardJobTable extends Doctrine_Table
{
	/**
	 * Returns an instance of this class.
	 *
	 * @return object PluginsbJobBoardJobTable
	 */
	public static function getInstance()
	{
			return Doctrine_Core::getTable('sbJobBoardJob');
	}
	
	/** 
	 * Returns a Doctrine_Collection of jobs
	 * 
	 * @param integer $limit
	 * @param boolean $active
	 * @param boolean $expired
	 * @param string $order
	 * @return Doctrine_Collection 
	 */
	public static function getJobs($limit = 5, $active = true, $featured = false, $expired = false, $order = 'updated_at', $direction = 'DESC')
	{
		$fast = sfConfig::get('app_a_fasthydrate', false);
		
		$root = Doctrine_Query::create()
						->from('sbJobBoardJob j')
						->leftJoin('j.Categories a ')
						->where(1);
		
		if(is_bool($active))
		{
			$root->andWhere('j.active = ?', $active);
		}
		
		if(is_bool($featured))
		{
			$root->andWhere('j.featured = ?', $featured);
		}
		
		if(is_bool($expired))
		{
			// @TODO expired filter
		}
		
		if(!is_null($order) and !is_null($direction))
		{
			$root->orderBy('j.' . $order . ' ' . $direction);
		}
		
		if(is_numeric($limit))
		{
			$root->limit($limit);
		}
		
		return $root->execute(array(), $fast ? Doctrine::HYDRATE_ARRAY : Doctrine::HYDRATE_RECORD);
	}
	
	public static function currencySymbol($currency)
	{
		$currency = strtolower($currency);
		
		switch($currency)
		{
			case 'gbp':
				return '£';
				break;
			
			case 'eur':
				return '€';
				break;
			
			case 'usd':
				return '$';
				break;
		}
		
		return '¤';
	}
	
	public function addCategoriesForUser(sfGuardUser $user, $admin = false)
  {
    $q = $this->addCategories();  
    return Doctrine::getTable('aCategory')->addCategoriesForUser($user, $admin, $q);
  }
	
	public function addCategories(Doctrine_Query $q=null)
  {
    if(is_null($q))
      $q = Doctrine::getTable('aCategory')->createQuery();
      
    $q->addOrderBy('aCategory.name');
    return $q;
  }
}